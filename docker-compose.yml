services:


  # Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - microservices-network


  # Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network


    # User Service
  user-service:
   build:
     context: ./user-service
     dockerfile: Dockerfile
   container_name: user-service
   environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-bank-user:5432/bank_user
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
   ports:
     - "8082:8082"
   depends_on:
     - api-gateway
     - eureka-server
     - postgres-bank-user
   networks:
     - microservices-network


  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
    - "8081:8081"
    depends_on:
      - api-gateway
      - eureka-server
      - user-service
    networks:
      - microservices-network



  # Account Service
  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    container_name: account-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-bank-account:5432/bank_account
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8083:8083"
    depends_on:
      - api-gateway
      - eureka-server
      - user-service
      - postgres-bank-account
    networks:
      - microservices-network


  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8084:8084"
    depends_on:
      - api-gateway
      - eureka-server
      - kafka
      - account-service
    networks:
      - microservices-network


  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    container_name: transaction-service
    ports:
      - "8085:8085"
    environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-bank-transactions:5432/bank_transactions
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - api-gateway
      - eureka-server
      - kafka
      - account-service
    networks:
      - microservices-network












  # postgresql database
  postgres-bank-user:
    image: postgres:15-alpine
    shm_size: 128MB
    container_name: postgres-bank-user
    environment:
      POSTGRES_DB: bank_user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
        - "5432:5432"
    volumes:
      - postgres-bank-user-vol:/var/lib/postgresql/data
    networks:
        - microservices-network

    # postgresql database
  postgres-bank-account:
    image: postgres:15-alpine
    container_name: postgres-bank-account
    environment:
      POSTGRES_DB: bank_account
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-bank-account-vol:/var/lib/postgresql/data
    networks:
      - microservices-network

    # postgresql database
  postgres-bank-transactions:
    image: postgres:15-alpine
    container_name: postgres-bank-transactions
    environment:
      POSTGRES_DB: bank_transactions
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-bank-transactions-vol:/var/lib/postgresql/data
    networks:
      - microservices-network






  # Kafka and Zookeeper

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - microservices-network

  kafka:
      image: ubuntu/kafka:latest
      container_name: kafka
      ports:
        - "9092:9092"
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT://kafka:9092
        - ALLOW_PLAINTEXT_LISTENER=yes
      depends_on:
        - zookeeper
      networks:
        - microservices-network









networks:
  microservices-network:
    driver: bridge

volumes:
    postgres-bank-user-vol:
    postgres-bank-account-vol:
    postgres-bank-transactions-vol: